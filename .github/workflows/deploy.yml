name: Deploy to AWS

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AWS_REGION: us-east-1

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform with caching
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.12.0
          terraform_wrapper: false

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Format and Validate
        working-directory: ./terraform
        run: |
          terraform fmt -check
          terraform validate

      - name: Create ECR Repository and IAM Roles
        working-directory: ./terraform
        run: terraform apply -auto-approve -target=aws_ecr_repository.ai_doc_parser -target=aws_iam_role.lambda_role -target=aws_iam_role_policy.lambda_s3_policy -target=aws_iam_role_policy_attachment.lambda_logs
        env:
          TF_VAR_api_key: ${{ secrets.API_KEY }}
          TF_VAR_db_host: ${{ secrets.DB_HOST }}
          TF_VAR_db_name: ${{ secrets.DB_NAME }}
          TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
          TF_VAR_db_port: ${{ secrets.DB_PORT }}
          TF_VAR_db_user: ${{ secrets.DB_USER }}
          TF_VAR_openai_api_key: ${{ secrets.OPENAI_API_KEY }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get ECR Repository URI
        id: get-ecr-uri
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          ECR_REPO="ai-doc-parser-ecr"
          ECR_URI="${ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPO}"
          echo "ECR_URI=${ECR_URI}" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.ECR_URI }}:latest

      - name: Deploy remaining infrastructure
        working-directory: ./terraform
        run: terraform apply -auto-approve
        env:
          TF_VAR_api_key: ${{ secrets.API_KEY }}
          TF_VAR_db_host: ${{ secrets.DB_HOST }}
          TF_VAR_db_name: ${{ secrets.DB_NAME }}
          TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
          TF_VAR_db_port: ${{ secrets.DB_PORT }}
          TF_VAR_db_user: ${{ secrets.DB_USER }}
          TF_VAR_openai_api_key: ${{ secrets.OPENAI_API_KEY }}

      - name: Output API URL
        working-directory: ./terraform
        run: terraform output api_url
