name: Destroy Infrastructure

on:
  workflow_dispatch:
    inputs:
      aws_region:
        description: 'AWS Region where resources are deployed'
        required: false
        default: 'us-east-1'
      environment:
        description: 'Environment to destroy'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging
          - development
      confirmation:
        description: 'Type "destroy" to confirm'
        required: true

jobs:
  destroy:
    if: ${{ github.event.inputs.confirmation == 'destroy' }}
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set AWS Region
        id: set-region
        run: echo "AWS_REGION=${{ github.event.inputs.aws_region || secrets.AWS_REGION || 'us-east-1' }}" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        
      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Ensure force_delete and force_destroy are true
        run: |
          if ! grep -q "force_delete = true" terraform/main.tf; then
            sed -i '/resource "aws_ecr_repository" "ai_doc_parser" {/a \ \ force_delete = true' terraform/main.tf
          fi
          if ! grep -q "force_destroy = true" terraform/main.tf; then
            sed -i '/resource "aws_s3_bucket" "ai_doc_parser" {/a \ \ force_destroy = true' terraform/main.tf
          fi

      - name: Empty S3 bucket
        run: aws s3 rm s3://ai-doc-parser-s3 --recursive

      - name: Apply force_delete/force_destroy changes
        working-directory: ./terraform
        run: |
          terraform apply -auto-approve \
            -var="aws_region=${{ env.AWS_REGION }}" \
            -var="api_key=${{ secrets.API_KEY }}" \
            -var="db_host=${{ secrets.DB_HOST }}" \
            -var="db_name=${{ secrets.DB_NAME }}" \
            -var="db_password=${{ secrets.DB_PASSWORD }}" \
            -var="db_port=${{ secrets.DB_PORT }}" \
            -var="db_user=${{ secrets.DB_USER }}" \
            -var="openai_api_key=${{ secrets.OPENAI_API_KEY }}"

      - name: Destroy Infrastructure
        working-directory: ./terraform
        run: |
          terraform destroy -auto-approve \
            -var="aws_region=${{ env.AWS_REGION }}" \
            -var="api_key=${{ secrets.API_KEY }}" \
            -var="db_host=${{ secrets.DB_HOST }}" \
            -var="db_name=${{ secrets.DB_NAME }}" \
            -var="db_password=${{ secrets.DB_PASSWORD }}" \
            -var="db_port=${{ secrets.DB_PORT }}" \
            -var="db_user=${{ secrets.DB_USER }}" \
            -var="openai_api_key=${{ secrets.OPENAI_API_KEY }}" 